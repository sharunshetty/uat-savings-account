
$(function () {

    //Scroll
    $('body').overlayScrollbars({});

    //Menu active selection
    var url = window.location;
    $('ul.nav-sidebar a').filter(function() { return this.href == url; }).addClass('active'); 
    $('ul.nav-treeview a').filter(function() { return this.href == url; }).parentsUntil(".nav-sidebar > .nav-treeview").addClass('menu-open').prev('a').addClass('active');

});

/* Theme */
!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = e || self).adminlte = {}) }(this, function (e) { "use strict"; var t = function (e) { var t = "Layout", n = e.fn[t], i = ".main-header", o = ".main-sidebar", s = ".main-sidebar .sidebar", a = ".content-wrapper", r = ".control-sidebar-content", l = ".main-footer", d = '[data-widget="pushmenu"]', c = ".login-box", u = ".register-box", h = "sidebar-focused", f = "layout-fixed", p = "login-page", _ = "register-page", g = "control-sidebar-slide-open", m = "control-sidebar-open", v = { scrollbarTheme: "os-theme-light", scrollbarAutoHide: "l" }, y = function () { function t(e, t) { this._config = t, this._element = e, this._init() } var n = t.prototype; return n.fixLayoutHeight = function (t) { void 0 === t && (t = null); var n = 0; (e("body").hasClass(g) || e("body").hasClass(m) || "control_sidebar" == t) && (n = e(r).height()); var o = { window: e(window).height(), header: 0 !== e(i).length ? e(i).outerHeight() : 0, footer: 0 !== e(l).length ? e(l).outerHeight() : 0, sidebar: 0 !== e(s).length ? e(s).height() : 0, control_sidebar: n }, d = this._max(o); d == o.control_sidebar ? e(a).css("min-height", d) : d == o.window ? e(a).css("min-height", d - o.header - o.footer) : e(a).css("min-height", d - o.header), e("body").hasClass(f) && (e(a).css("min-height", d - o.header - o.footer), void 0 !== e.fn.overlayScrollbars && e(s).overlayScrollbars({ className: this._config.scrollbarTheme, sizeAutoCapable: !0, scrollbars: { autoHide: this._config.scrollbarAutoHide, clickScrolling: !0 } })) }, n._init = function () { var t = this; if (this.fixLayoutHeight(), e(s).on("collapsed.lte.treeview expanded.lte.treeview", function () { t.fixLayoutHeight() }), e(d).on("collapsed.lte.pushmenu shown.lte.pushmenu", function () { t.fixLayoutHeight() }), e(window).resize(function () { t.fixLayoutHeight() }), e("body").hasClass(p) || e("body").hasClass(_)) { if (e("body").hasClass(p) || e("body").hasClass(_)) { var n = e(c + ", " + u).height(); e("body").css("min-height", n) } } else e("body, html").css("height", "auto"); e("body.hold-transition").removeClass("hold-transition") }, n._max = function (e) { var t = 0; return Object.keys(e).forEach(function (n) { e[n] > t && (t = e[n]) }), t }, t._jQueryInterface = function (n) { return void 0 === n && (n = ""), this.each(function () { var i = e(this).data("lte.layout"), o = e.extend({}, v, e(this).data()); i || (i = new t(e(this), o), e(this).data("lte.layout", i)), "init" !== n && "" !== n || i._init() }) }, t }(); return e(window).on("load", function () { y._jQueryInterface.call(e("body")) }), e(s + " a").on("focusin", function () { e(o).addClass(h) }), e(s + " a").on("focusout", function () { e(o).removeClass(h) }), e.fn[t] = y._jQueryInterface, e.fn[t].Constructor = y, e.fn[t].noConflict = function () { return e.fn[t] = n, y._jQueryInterface }, y }(jQuery), n = function (e) { var t = "PushMenu", n = ".lte.pushmenu", i = e.fn[t], o = { COLLAPSED: "collapsed" + n, SHOWN: "shown" + n }, s = { autoCollapseSize: 992, enableRemember: 1, noTransitionAfterReload: 0 }, a = { TOGGLE_BUTTON: '[data-widget="pushmenu"]', SIDEBAR_MINI: ".sidebar-mini", SIDEBAR_COLLAPSED: ".sidebar-collapse2", BODY: "body", OVERLAY: "#sidebar-overlay", WRAPPER: ".wrapper" }, r = "sidebar-collapse2", l = "sidebar-open", d = function () { function t(t, n) { this._element = t, this._options = e.extend({}, s, n), e(a.OVERLAY).length || this._addOverlay(), this._init() } var i = t.prototype; return i.expand = function () { this._options.autoCollapseSize && e(window).width() <= this._options.autoCollapseSize && e(a.BODY).addClass(l), e(a.BODY).removeClass(r), this._options.enableRemember && localStorage.setItem("remember" + n, l); var t = e.Event(o.SHOWN); e(this._element).trigger(t) }, i.collapse = function () { this._options.autoCollapseSize && e(window).width() <= this._options.autoCollapseSize && e(a.BODY).removeClass(l), e(a.BODY).addClass(r), this._options.enableRemember && localStorage.setItem("remember" + n, r); var t = e.Event(o.COLLAPSED); e(this._element).trigger(t) }, i.toggle = function () { e(a.BODY).hasClass(r) ? this.expand() : this.collapse() }, i.autoCollapse = function (t) { void 0 === t && (t = !1), this._options.autoCollapseSize && (e(window).width() <= this._options.autoCollapseSize ? e(a.BODY).hasClass(l) || this.collapse() : 1 == t && e(a.BODY).hasClass(l) && e(a.BODY).removeClass(l)) }, i.remember = function () { this._options.enableRemember && (localStorage.getItem("remember" + n) == r ? this._options.noTransitionAfterReload ? e("body").addClass("hold-transition").addClass(r).delay(50).queue(function () { e(this).removeClass("hold-transition"), e(this).dequeue() }) : e("body").addClass(r) : this._options.noTransitionAfterReload ? e("body").addClass("hold-transition").removeClass(r).delay(50).queue(function () { e(this).removeClass("hold-transition"), e(this).dequeue() }) : e("body").removeClass(r)) }, i._init = function () { var t = this; this.remember(), this.autoCollapse(), e(window).resize(function () { t.autoCollapse(!0) }) }, i._addOverlay = function () { var t = this, n = e("<div />", { id: "sidebar-overlay" }); n.on("click", function () { t.collapse() }), e(a.WRAPPER).append(n) }, t._jQueryInterface = function (n) { return this.each(function () { var i = e(this).data("lte.pushmenu"), o = e.extend({}, s, e(this).data()); i || (i = new t(this, o), e(this).data("lte.pushmenu", i)), "string" == typeof n && n.match(/collapse|expand|toggle/) && i[n]() }) }, t }(); return e(document).on("click", a.TOGGLE_BUTTON, function (t) { t.preventDefault(); var n = t.currentTarget; "pushmenu" !== e(n).data("widget") && (n = e(n).closest(a.TOGGLE_BUTTON)), d._jQueryInterface.call(e(n), "toggle") }), e(window).on("load", function () { d._jQueryInterface.call(e(a.TOGGLE_BUTTON)) }), e.fn[t] = d._jQueryInterface, e.fn[t].Constructor = d, e.fn[t].noConflict = function () { return e.fn[t] = i, d._jQueryInterface }, d }(jQuery), i = function (e) { var t = "Treeview", n = e.fn[t], i = { SELECTED: "selected.lte.treeview", EXPANDED: "expanded.lte.treeview", COLLAPSED: "collapsed.lte.treeview", LOAD_DATA_API: "load.lte.treeview" }, o = ".nav-item", s = ".nav-treeview", a = ".menu-open", r = '[data-widget="treeview"]', l = "menu-open", d = "sidebar-collapse2", c = { trigger: r + " " + ".nav-link", animationSpeed: 300, accordion: !0, expandSidebar: !1, sidebarButtonSelector: '[data-widget="pushmenu"]' }, u = function () { function t(e, t) { this._config = t, this._element = e } var n = t.prototype; return n.init = function () { this._setupListeners() }, n.expand = function (t, n) { var o = this, r = e.Event(i.EXPANDED); if (this._config.accordion) { var d = n.siblings(a).first(), c = d.find(s).first(); this.collapse(c, d) } t.stop().slideDown(this._config.animationSpeed, function () { n.addClass(l), e(o._element).trigger(r) }), this._config.expandSidebar && this._expandSidebar() }, n.collapse = function (t, n) { var o = this, r = e.Event(i.COLLAPSED); t.stop().slideUp(this._config.animationSpeed, function () { n.removeClass(l), e(o._element).trigger(r), t.find(a + " > " + s).slideUp(), t.find(a).removeClass(l) }) }, n.toggle = function (t) { var n = e(t.currentTarget), i = n.parent(), a = i.find("> " + s); if (a.is(s) || (i.is(o) || (a = i.parent().find("> " + s)), a.is(s))) { t.preventDefault(); var r = n.parents(o).first(); r.hasClass(l) ? this.collapse(e(a), r) : this.expand(e(a), r) } }, n._setupListeners = function () { var t = this; e(document).on("click", this._config.trigger, function (e) { t.toggle(e) }) }, n._expandSidebar = function () { e("body").hasClass(d) && e(this._config.sidebarButtonSelector).PushMenu("expand") }, t._jQueryInterface = function (n) { return this.each(function () { var i = e(this).data("lte.treeview"), o = e.extend({}, c, e(this).data()); i || (i = new t(e(this), o), e(this).data("lte.treeview", i)), "init" === n && i[n]() }) }, t }(); return e(window).on(i.LOAD_DATA_API, function () { e(r).each(function () { u._jQueryInterface.call(e(this), "init") }) }), e.fn[t] = u._jQueryInterface, e.fn[t].Constructor = u, e.fn[t].noConflict = function () { return e.fn[t] = n, u._jQueryInterface }, u }(jQuery), o = function (e) { var t = "CardRefresh", n = e.fn[t], i = { LOADED: "loaded.lte.cardrefresh", OVERLAY_ADDED: "overlay.added.lte.cardrefresh", OVERLAY_REMOVED: "overlay.removed.lte.cardrefresh" }, o = { CARD: "card" }, s = { CARD: "." + o.CARD, DATA_REFRESH: '[data-card-widget="card-refresh"]' }, a = { source: "", sourceSelector: "", params: {}, trigger: s.DATA_REFRESH, content: ".card-body", loadInContent: !0, loadOnInit: !0, responseType: "", overlayTemplate: '<div class="overlay"><i class="fas fa-2x fa-sync-alt fa-spin"></i></div>', onLoadStart: function () { }, onLoadDone: function (e) { return e } }, r = function () { function t(t, n) { if (this._element = t, this._parent = t.parents(s.CARD).first(), this._settings = e.extend({}, a, n), this._overlay = e(this._settings.overlayTemplate), t.hasClass(o.CARD) && (this._parent = t), "" === this._settings.source) throw new Error("Source url was not defined. Please specify a url in your CardRefresh source option."); this._init(), this._settings.loadOnInit && this.load() } var n = t.prototype; return n.load = function () { this._addOverlay(), this._settings.onLoadStart.call(e(this)), e.get(this._settings.source, this._settings.params, function (t) { this._settings.loadInContent && ("" != this._settings.sourceSelector && (t = e(t).find(this._settings.sourceSelector).html()), this._parent.find(this._settings.content).html(t)), this._settings.onLoadDone.call(e(this), t), this._removeOverlay() }.bind(this), "" !== this._settings.responseType && this._settings.responseType); var t = e.Event(i.LOADED); e(this._element).trigger(t) }, n._addOverlay = function () { this._parent.append(this._overlay); var t = e.Event(i.OVERLAY_ADDED); e(this._element).trigger(t) }, n._removeOverlay = function () { this._parent.find(this._overlay).remove(); var t = e.Event(i.OVERLAY_REMOVED); e(this._element).trigger(t) }, n._init = function (t) { var n = this; e(this).find(this._settings.trigger).on("click", function () { n.load() }) }, t._jQueryInterface = function (n) { var i = e(this).data("lte.cardrefresh"), o = e.extend({}, a, e(this).data()); i || (i = new t(e(this), o), e(this).data("lte.cardrefresh", "string" == typeof n ? i : n)), "string" == typeof n && n.match(/load/) ? i[n]() : "object" == typeof n && i._init(e(this)) }, t }(); return e(document).on("click", s.DATA_REFRESH, function (t) { t && t.preventDefault(), r._jQueryInterface.call(e(this), "load") }), e.fn[t] = r._jQueryInterface, e.fn[t].Constructor = r, e.fn[t].noConflict = function () { return e.fn[t] = n, r._jQueryInterface }, r }(jQuery), s = function (e) { var t = "Dropdown", n = e.fn[t], i = "ul.dropdown-menu", o = '[data-toggle="dropdown"]', s = {}, a = function () { function t(e, t) { this._config = t, this._element = e } return t.prototype.toggleSubmenu = function () { this._element.siblings().show().toggleClass("show"), this._element.next().hasClass("show") || this._element.parents(".dropdown-menu").first().find(".show").removeClass("show").hide(), this._element.parents("li.nav-item.dropdown.show").on("hidden.bs.dropdown", function (t) { e(".dropdown-submenu .show").removeClass("show").hide() }) }, t._jQueryInterface = function (n) { return this.each(function () { var i = e(this).data("lte.dropdown"), o = e.extend({}, s, e(this).data()); i || (i = new t(e(this), o), e(this).data("lte.dropdown", i)), "toggleSubmenu" === n && i[n]() }) }, t }(); return e(i + " " + o).on("click", function (t) { t.preventDefault(), t.stopPropagation(), a._jQueryInterface.call(e(this), "toggleSubmenu") }), e.fn[t] = a._jQueryInterface, e.fn[t].Constructor = a, e.fn[t].noConflict = function () { return e.fn[t] = n, a._jQueryInterface }, a }(jQuery); e.CardRefresh = o, e.Dropdown = s, e.Layout = t, e.PushMenu = n, e.Treeview = i, Object.defineProperty(e, "__esModule", { value: !0 }) });